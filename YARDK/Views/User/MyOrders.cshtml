@model List<YARDK.Models.Order>
@{
    ViewData["Title"] = "My Orders";
    Layout = "_Layout";
}


<!-- My Orders Section -->
<div class="container my-5">
	<div class="row justify-content-center">
		<div class="col-lg-10">
			<div class="profile-section p-4">
				<!-- Tabs Start -->
				<div class="user-tabs">
					<a asp-controller="User" asp-action="Profile" class="tab-button">Profile</a>
					<a asp-controller="User" asp-action="MyAds" class="tab-button">My ADS</a>
					<a asp-controller="User" asp-action="MyOrders" class="tab-button active">My Orders</a>
					<a asp-controller="User" asp-action="PaymentMethod" class="tab-button">Payment Method</a>
				</div>
				<!-- Tabs End -->

                <!-- Display success messages -->
                @if (TempData["SuccessMessage"] != null)
                {
                    <div class="alert alert-success mt-3 alert-dismissible fade show" role="alert">
                        <i class="fas fa-check-circle me-2"></i> @TempData["SuccessMessage"]
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                }

                <!-- Display error messages -->
                @if (TempData["ErrorMessage"] != null)
                {
                    <div class="alert alert-danger mt-3 alert-dismissible fade show" role="alert">
                        <i class="fas fa-exclamation-circle me-2"></i> @TempData["ErrorMessage"]
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                }

                <div class="container py-4">
                    <div class="d-flex justify-content-between align-items-center mb-4">
                        <h2 class="mb-0">My Orders</h2>
                        <a href="@Url.Action("Categories", "Product")" class="btn btn-primary">
                            <i class="fas fa-shopping-cart me-2"></i>Continue Shopping
                        </a>
                    </div>

                    @if (Model != null && Model.Any())
                    {
                        <div class="card shadow-sm">
                            <div class="table-responsive">
                                <table class="table table-striped mb-0">
                                    <thead class="table-light">
                                        <tr>
                                            <th>Order #</th>
                                            <th>Date</th>
                                            <th>Status</th>
                                            <th>Payment</th>
                                            <th>Total</th>
                                            <th>Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var order in Model.OrderByDescending(o => o.CreatedAt))
                                        {
                                            <tr>
                                                <td>@order.OrderNumber</td>
                                                <td>@order.CreatedAt?.ToString("dd/MM/yyyy HH:mm")</td>
                                                <td>
                                                    <span class="badge @GetOrderStatusClass(order.Status)">
                                                        @switch (order.Status)
                                                        {
                                                            case "Pending":
                                                                <span class="en-text">Pending</span>
                                                                <span class="ar-text d-none">قيد الانتظار</span>
                                                                break;
                                                            case "Processing":
                                                                <span class="en-text">Processing</span>
                                                                <span class="ar-text d-none">قيد المعالجة</span>
                                                                break;
                                                            case "Delivered":
                                                                <span class="en-text">Delivered</span>
                                                                <span class="ar-text d-none">تم التوصيل</span>
                                                                break;
                                                            case "Cancelled":
                                                                <span class="en-text">Cancelled</span>
                                                                <span class="ar-text d-none">ملغي</span>
                                                                break;
                                                            default:
                                                                <span class="en-text">@order.Status</span>
                                                                <span class="ar-text d-none">@order.Status</span>
                                                                break;
                                                        }
                                                    </span>
                                                </td>
                                                <td>
                                                    @if (order.Payments != null && order.Payments.Any(p => p.PaymentStatus == "Paid"))
                                                    {
                                                        <span class="badge bg-success">
                                                            <span class="en-text">Paid</span>
                                                            <span class="ar-text d-none">مدفوع</span>
                                                        </span>
                                                    }
                                                    else
                                                    {
                                                        <span class="badge bg-warning">
                                                            <span class="en-text">Pending</span>
                                                            <span class="ar-text d-none">معلقة</span>
                                                        </span>
                                                    }
                                                </td>
                                                <td>JD @order.TotalAmount.ToString("F2")</td>
                                                <td>
                                                    <a href="@Url.Action("OrderDetails", "User", new { id = order.Id })" class="btn btn-sm btn-primary">
                                                        <i class="fas fa-eye me-1"></i> View Details
                                                    </a>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-info text-center py-5">
                            <i class="fas fa-shopping-bag mb-3" style="font-size: 3rem;"></i>
                            <h4>You haven't placed any orders yet</h4>
                            <p>Browse our categories and place your first order!</p>
                            <a href="@Url.Action("Categories", "Product")" class="btn btn-primary mt-3">
                                <i class="fas fa-shopping-cart me-2"></i>Shop Now
                            </a>
                        </div>
                    }
                </div>
			</div>
		</div>
	</div>
</div>

@functions {
    string GetOrderStatusClass(string status)
    {
        return status switch
        {
            "Pending" => "bg-warning",
            "Processing" => "bg-info",
            "Delivered" => "bg-success",
            "Cancelled" => "bg-danger",
            _ => "bg-secondary"
        };
    }
}

<style>
	/*** Taps Start ***/
	.user-tabs {
		display: flex;
		margin-bottom: 15px;
		border-bottom: 1px solid #ddd;
		overflow-x: auto;
	}

	.tab-button {
		font-weight: 600;
		padding: 10px 20px;
		background-color: #f8f8f8;
		border: 1px solid #ddd;
		border-bottom: none;
		margin-right: 5px;
		text-decoration: none;
		color: #333;
		border-radius: 5px 5px 0 0;
		white-space: nowrap;
		transition: all 0.3s ease;
	}

		.tab-button:hover {
			background-color: #e9f0ff;
			color: #0056b3;
		}

	.tab-button.active {
		background-color: #007bff;
		color: white;
		border-color: #007bff;
		box-shadow: 0 -2px 5px rgba(0,0,0,0.1);
	}
	/*** Taps End ***/

    /* Table styling */
    .table-striped > tbody > tr:nth-of-type(odd) {
        background-color: rgba(0, 123, 255, 0.05);
    }

    .table th {
        font-weight: 600;
    }

    /* Status Badge Styling */
    .badge {
        padding: 8px 12px;
        font-size: 0.85rem;
        font-weight: 500;
        border-radius: 4px;
    }

    .bg-warning {
        background-color: #ffc107 !important;
        color: #000 !important;
    }

    .bg-info {
        background-color: #0dcaf0 !important;
        color: #fff !important;
    }

    .bg-success {
        background-color: #198754 !important;
        color: #fff !important;
    }

    .bg-danger {
        background-color: #dc3545 !important;
        color: #fff !important;
    }

    .bg-secondary {
        background-color: #6c757d !important;
        color: #fff !important;
    }

    /* Arabic Text Support */
    .ar-text {
        font-family: 'Cairo', sans-serif;
    }

    /* RTL Support for Arabic */
    [dir="rtl"] .badge {
        font-family: 'Cairo', sans-serif;
    }
</style>

@section Scripts {
	<script>
		$(document).ready(function() {
			const currentUrl = window.location.pathname;
			$('.user-tabs a').each(function() {
				const href = $(this).attr('href');
				if (href && currentUrl.includes(href.split('/').pop())) {
					$('.user-tabs a').removeClass('active');
					$(this).addClass('active');
				}
			});

            // Debug payment status
            console.log('Orders data:', @Html.Raw(Json.Serialize(Model.Select(o => new {
                OrderNumber = o.OrderNumber,
                Payments = o.Payments.Select(p => new {
                    Status = p.PaymentStatus,
                    Amount = p.Amount
                })
            }))));

            // Language switch handling
            function updateLanguage() {
                const isArabic = localStorage.getItem('language') === 'ar';
                $('.en-text').toggleClass('d-none', isArabic);
                $('.ar-text').toggleClass('d-none', !isArabic);
                $('html').attr('dir', isArabic ? 'rtl' : 'ltr');
            }

            // Initial language setup
            updateLanguage();

            // Listen for language changes
            $(document).on('languageChanged', function() {
                updateLanguage();
            });
		});
	</script>
}
 