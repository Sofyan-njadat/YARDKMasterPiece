@model YARDK.Models.PaymentMethod
@{
	ViewData["Title"] = "Payment Methods";
	Layout = "_Layout";
}

<!-- Profile Section -->
	<div class="container my-5">
		<div class="row justify-content-center">
			<div class="col-lg-10">
				<div class="profile-section p-4">
					<!-- Tabs Start -->
					<div class="user-tabs">
						<a asp-controller="User" asp-action="Profile" class="tab-button">Profile</a>
						<a asp-controller="User" asp-action="MyAds" class="tab-button">My ADS</a>
					<a asp-controller="User" asp-action="MyOrders" class="tab-button">My Orders</a>
					<a asp-controller="User" asp-action="PaymentMethod" class="tab-button active">Payment Method</a>
						<!-- يمكنك إضافة أزرار أخرى هنا إذا لزم الأمر -->
					</div>
					<!-- Tabs End -->

				<!-- Alert Messages -->
				@if (TempData["SuccessMessage"] != null)
				{
					<div class="alert alert-success mt-3 alert-dismissible fade show" role="alert">
						<i class="fas fa-check-circle me-2"></i> @TempData["SuccessMessage"]
						<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
					</div>
				}

				@if (TempData["ErrorMessage"] != null)
				{
					<div class="alert alert-danger mt-3 alert-dismissible fade show" role="alert">
						<i class="fas fa-exclamation-circle me-2"></i> @TempData["ErrorMessage"]
						<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
					</div>
				}

						<!-- Payment Methods -->
					<div class="mt-5 inline-section">
						<div class="compact-card p-3 bg-light">
							<div class="d-flex justify-content-between align-items-center mb-3">
								<h6 class="section-title mb-0">My Payment Method</h6>
							@if (Model == null)
							{
								<button class="btn btn-link btn-sm p-0" data-bs-toggle="modal"
										data-bs-target="#addPaymentModal">
									<i class="fas fa-plus"></i> Add Card
								</button>
							}
							else
							{
								<button class="btn btn-link btn-sm p-0" data-bs-toggle="modal"
										data-bs-target="#addPaymentModal">
									<i class="fas fa-edit"></i> Edit Card
								</button>
							}
							</div>
						
						@if (Model != null)
						{
							<div class="payment-card p-3 bg-white rounded">
								<div class="d-flex justify-content-between align-items-center">
									<div>
										@switch (Model.CardType)
										{
											case "Visa":
												<i class="fab fa-cc-visa fa-2x text-primary"></i>
												break;
											case "MasterCard":
												<i class="fab fa-cc-mastercard fa-2x text-danger"></i>
												break;
											case "AmericanExpress":
												<i class="fab fa-cc-amex fa-2x text-info"></i>
												break;
											case "Discover":
												<i class="fab fa-cc-discover fa-2x text-warning"></i>
												break;
											default:
												<i class="far fa-credit-card fa-2x text-secondary"></i>
												break;
										}
										<span class="ms-2">@Model.MaskedCardNumber</span>
										<p class="small text-muted mb-0">Expires: @Model.ExpiryDate</p>
									</div>
									<form asp-controller="User" asp-action="DeletePaymentMethod" method="post">
										@Html.AntiForgeryToken()
										<button type="submit" class="btn btn-link text-danger p-0" 
												onclick="return confirm('Are you sure you want to delete this payment method?');">
										<i class="fas fa-trash-alt"></i>
									</button>
									</form>
								</div>
							</div>
						}
						else
						{
							<div class="text-center py-4">
								<div class="mb-3 text-muted">
									<i class="far fa-credit-card fa-3x"></i>
								</div>
								<p>You haven't added any payment methods yet.</p>
								<button class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#addPaymentModal">
									<i class="fas fa-plus-circle me-1"></i> Add Payment Method
								</button>
							</div>
						}
						</div>
					</div>

					<!-- Add Payment Method Modal -->
					<div class="modal fade" id="addPaymentModal" tabindex="-1">
						<div class="modal-dialog">
							<div class="modal-content">
								<div class="modal-header">
								<h5 class="modal-title">@(Model == null ? "Add Payment Card" : "Edit Payment Card")</h5>
									<button type="button" class="btn-close" data-bs-dismiss="modal"></button>
								</div>
								<div class="modal-body">
								<form asp-controller="User" asp-action="AddPaymentMethod" method="post">
									@Html.AntiForgeryToken()
									
										<div class="mb-3">
											<label class="form-label">Card Number</label>
										<input type="text" class="form-control" name="CardNumber" id="CardNumber" 
											   placeholder="1234567890123456" required 
											   pattern="[0-9]{16}" maxlength="16"
											   value="@(Model?.CardNumber ?? "")" />
										<div class="form-text">Enter 16 digits without spaces</div>
										</div>
										<div class="row">
											<div class="col-md-6 mb-3">
												<label class="form-label">Expiry Date</label>
											<input type="text" class="form-control" name="ExpiryDate" id="ExpiryDate" 
												   placeholder="MM/YY" required
												   pattern="(0[1-9]|1[0-2])\/([0-9]{2})" maxlength="5"
												   value="@(Model?.ExpiryDate ?? "")" />
											</div>
											<div class="col-md-6 mb-3">
												<label class="form-label">CVV</label>
											<input type="text" class="form-control" name="CVV" id="CVV" 
												   placeholder="123" required 
												   pattern="[0-9]{3}" maxlength="3"
												   value="@(Model?.CVV ?? "")" />
										</div>
											</div>
									<div class="mb-3">
										<label class="form-label">Card Holder Name</label>
										<input type="text" class="form-control" name="CardHolderName" id="CardHolderName"
											   placeholder="John Doe" 
											   value="@(Model?.CardHolderName ?? "")" />
										</div>
										<button type="submit" class="btn btn-primary">Save Card</button>
									</form>
								</div>
							</div>
						</div>
				</div>
			</div>
						</div>
					</div>
				</div>

<style>
	/*** Taps Start ***/
	.user-tabs {
		display: flex;
		margin-bottom: 15px;
		border-bottom: 1px solid #ddd;
		overflow-x: auto;
	}

	.tab-button {
		font-weight: 600;
		padding: 10px 20px;
		background-color: #f8f8f8;
		border: 1px solid #ddd;
		border-bottom: none;
		margin-right: 5px;
		text-decoration: none;
		color: #333;
		border-radius: 5px 5px 0 0;
		white-space: nowrap;
		transition: all 0.3s ease;
	}

		.tab-button:hover {
			background-color: #e9f0ff;
			color: #0056b3;
		}

	.tab-button.active {
		background-color: #007bff;
		color: white;
		border-color: #007bff;
		box-shadow: 0 -2px 5px rgba(0,0,0,0.1);
	}
	/*** Taps End ***/

	/* Card styling */
	.payment-card {
		transition: all 0.3s ease;
	}

	.payment-card:hover {
		box-shadow: 0 5px 15px rgba(0,0,0,0.1);
	}

	/* Form input helpers */
	#CardNumber, #ExpiryDate, #CVV {
		letter-spacing: 1px;
		font-family: monospace;
	}
</style>

@section Scripts {
	<script>
		$(document).ready(function() {
			const currentUrl = window.location.pathname;
			$('.user-tabs a').each(function() {
				const href = $(this).attr('href');
				if (href && currentUrl.includes(href.split('/').pop())) {
					$('.user-tabs a').removeClass('active');
					$(this).addClass('active');
				}
			});

			// Format expiry date input as MM/YY
			$('#ExpiryDate').on('input', function() {
				const value = $(this).val().replace(/\D/g, '');
				if (value.length > 2) {
					$(this).val(value.substring(0, 2) + '/' + value.substring(2, 4));
				} else {
					$(this).val(value);
				}
			});

			// Format card number to groups of 4 digits for display (but keep actual value without spaces)
			$('#CardNumber').on('input', function() {
				$(this).val($(this).val().replace(/\D/g, '').substring(0, 16));
			});
		});
	</script>
}
