@model List<YARDK.Models.ProductViewModel>
@{
	ViewData["Title"] = "Furniture";
	Layout = "_Layout";
}


<!-- Header Start -->
<div class="container-fluid bg-breadcrumb">
	<div class="container text-center py-5" style="max-width: 900px;">
		<h3 class="text-white display-3 mb-4 wow fadeInDown" data-wow-delay="0.1s">
			<span class="en-text">Furniture</span>
			<span class="ar-text d-none">الأثاث</span>
		</h3>
		<ol class="breadcrumb justify-content-center text-white mb-0 wow fadeInDown" data-wow-delay="0.3s">
			<li class="breadcrumb-item">
				<a href="/" class="text-white">
					<span class="en-text">Home</span>
					<span class="ar-text d-none">الرئيسية</span>
				</a>
			</li>
			<li class="breadcrumb-item">
				<a asp-controller="Product" asp-action="Categories" class="text-white">
					<span class="en-text">Categories</span>
					<span class="ar-text d-none">الفئات</span>
				</a>
			</li>
			<li class="breadcrumb-item active text-secondary">
				<span class="en-text">Furniture</span>
				<span class="ar-text d-none">الأثاث</span>
			</li>
		</ol>
	</div>
</div>
<!-- Header End -->

<!-- Furniture Start -->
<div class="container-fluid service overflow-hidden py-5">
	<div class="container">
		<div class="row mb-4">
			<div class="col-12">
				<div class="bg-light rounded p-4 shadow-sm">
					<div class="d-flex justify-content-between align-items-center flex-wrap">
						<div class="section-title mb-0">
							<h5 class="sub-title text-primary">
								<span class="en-text">Furniture</span>
								<span class="ar-text d-none">الأثاث</span>
							</h5>
						</div>
						<div class="d-flex gap-2 mt-2 mt-md-0">
							<select id="sortOrder" class="form-select form-select-sm" style="width: auto;">
								<option value="default">
									<span class="en-text">Default Sorting</span>
									<span class="ar-text d-none">الترتيب الافتراضي</span>
								</option>
								<option value="priceAsc">
									<span class="en-text">Price: Low to High</span>
									<span class="ar-text d-none">السعر: من الأقل إلى الأعلى</span>
								</option>
								<option value="priceDesc">
									<span class="en-text">Price: High to Low</span>
									<span class="ar-text d-none">السعر: من الأعلى إلى الأقل</span>
								</option>
								<option value="nameAsc">
									<span class="en-text">Name: A to Z</span>
									<span class="ar-text d-none">الاسم: من أ إلى ي</span>
								</option>
								<option value="nameDesc">
									<span class="en-text">Name: Z to A</span>
									<span class="ar-text d-none">الاسم: من ي إلى أ</span>
								</option>
							</select>
						</div>
					</div>
				</div>
			</div>
		</div>

		<div class="row g-4" id="productsContainer">
			@if (Model != null && Model.Any())
			{
				foreach (var product in Model)
				{
					<div class="col-lg-4 col-md-6 col-sm-12 wow fadeInUp product-card" 
						 data-wow-delay="0.1s" 
						 data-price="@product.Price" 
						 data-name="@product.ProductName">
						<div class="card h-100 border-0 shadow-sm">
							<div class="position-relative">
								<img src="@product.ImageUrl" class="card-img-top" 
									 alt="@product.ProductName" style="height: 250px; object-fit: cover;">
								<div class="product-overlay">
									<div class="d-flex justify-content-center align-items-center h-100">
										<a asp-controller="Product" asp-action="ProductDetails" asp-route-id="@product.Id"
										   class="btn btn-primary btn-sm mx-1">
											<i class="fas fa-eye"></i>
										</a>
										<button onclick="addToCart(@product.Id)" class="btn btn-primary btn-sm mx-1">
											<i class="fas fa-cart-plus"></i>
										</button>
									</div>
								</div>
							</div>
							<div class="card-body p-4">
								<h5 class="card-title mb-3">@product.ProductName</h5>
								@if (!string.IsNullOrEmpty(product.Description))
								{
									<p class="card-text description-text">@product.Description</p>
								}
								<div class="d-flex justify-content-between align-items-center mt-3">
									<span class="text-primary fw-bold">@product.Price JD</span>
									<span class="badge bg-secondary">@product.Quantity in stock</span>
								</div>
							</div>
						</div>
					</div>
				}
			}
			else
			{
				<div class="col-12 text-center">
					<p>No furniture products available at the moment.</p>
				</div>
			}
		</div>
	</div>
</div>
<!-- Furniture End -->

<!-- Pagination Start -->
@if (ViewBag.TotalPages != null && ViewBag.TotalPages > 1)
{
	<div class="container-fluid py-5">
		<div class="container">
			<nav aria-label="Page navigation">
				<ul class="pagination justify-content-center">
					@if (ViewBag.HasPreviousPage)
					{
						<li class="page-item">
							<a class="page-link" asp-action="@ViewBag.CategoryName" asp-route-pageNumber="@(ViewBag.PageNumber - 1)" aria-label="Previous">
								<span aria-hidden="true">&laquo;</span>
							</a>
						</li>
					}
					else
					{
						<li class="page-item disabled">
							<span class="page-link">&laquo;</span>
						</li>
					}

					@for (int i = 1; i <= ViewBag.TotalPages; i++)
					{
						<li class="page-item @(i == ViewBag.PageNumber ? "active" : "")">
							<a class="page-link" asp-action="@ViewBag.CategoryName" asp-route-pageNumber="@i">@i</a>
						</li>
					}

					@if (ViewBag.HasNextPage)
					{
						<li class="page-item">
							<a class="page-link" asp-action="@ViewBag.CategoryName" asp-route-pageNumber="@(ViewBag.PageNumber + 1)" aria-label="Next">
								<span aria-hidden="true">&raquo;</span>
							</a>
						</li>
					}
					else
					{
						<li class="page-item disabled">
							<span class="page-link">&raquo;</span>
						</li>
					}
				</ul>
			</nav>
		</div>
	</div>
}
<!-- Pagination End -->

@section Scripts {
	<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
	<script>
		function addToCart(productId) {
			fetch(`/Product/AddToCart?id=${productId}`, {
				method: 'GET',
				headers: {
					'X-Requested-With': 'XMLHttpRequest'
				}
			})
			.then(response => response.json())
			.then(data => {
				if (data.success) {
					const isArabic = localStorage.getItem('language') === 'ar';
					Swal.fire({
						title: isArabic ? 'تم بنجاح!' : 'Success!',
						text: isArabic ? 'تمت إضافة المنتج إلى السلة' : data.message,
						icon: 'success',
						confirmButtonText: isArabic ? 'متابعة التسوق' : 'Continue Shopping',
						customClass: {
							popup: isArabic ? 'swal2-rtl' : '',
							title: isArabic ? 'swal2-arabic-font' : '',
							confirmButton: isArabic ? 'swal2-arabic-font' : ''
						}
					});
				}
			})
			.catch(error => {
				console.error('Error:', error);
			});
		}

		// Sorting functionality
		document.getElementById('sortOrder').addEventListener('change', function() {
			const container = document.getElementById('productsContainer');
			const products = Array.from(container.getElementsByClassName('product-card'));
			
			products.sort((a, b) => {
				const priceA = parseFloat(a.dataset.price);
				const priceB = parseFloat(b.dataset.price);
				const nameA = a.dataset.name.toLowerCase();
				const nameB = b.dataset.name.toLowerCase();
				
				switch(this.value) {
					case 'priceAsc':
						return priceA - priceB;
					case 'priceDesc':
						return priceB - priceA;
					case 'nameAsc':
						return nameA.localeCompare(nameB);
					case 'nameDesc':
						return nameB.localeCompare(nameA);
					default:
						return 0;
				}
			});
			
			products.forEach(product => container.appendChild(product));
		});
	</script>

	<style>
		.card {
			transition: transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
		}
		
		.card:hover {
			transform: translateY(-5px);
			box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;
		}

		.product-overlay {
			position: absolute;
			top: 0;
			left: 0;
			right: 0;
			bottom: 0;
			background-color: rgba(0, 0, 0, 0.5);
			opacity: 0;
			transition: opacity 0.3s ease-in-out;
			display: flex;
			justify-content: center;
			align-items: center;
		}

		.card:hover .product-overlay {
			opacity: 1;
		}

		.description-text {
			display: -webkit-box;
			-webkit-line-clamp: 3;
			-webkit-box-orient: vertical;
			overflow: hidden;
			text-overflow: ellipsis;
			min-height: 4.5em;
		}

		.page-link {
			color: #32A12E;
			background-color: #fff;
			border-color: #dee2e6;
		}

		.page-link:hover {
			color: #218838;
			background-color: #e9ecef;
			border-color: #dee2e6;
		}

		.page-item.active .page-link {
			background-color: #32A12E;
			border-color: #32A12E;
			color: #fff;
		}

		.form-select {
			border-color: #dee2e6;
		}

		.form-select:focus {
			border-color: #32A12E;
			box-shadow: 0 0 0 0.25rem rgba(50, 161, 46, 0.25);
		}

		[dir="rtl"] .product-overlay {
			left: 0;
			right: 0;
		}

		[dir="rtl"] .card-body {
			text-align: right;
		}

		[dir="rtl"] .form-select {
			padding-right: 2.25rem;
			padding-left: 0.75rem;
			background-position: left 0.75rem center;
		}
	</style>
}